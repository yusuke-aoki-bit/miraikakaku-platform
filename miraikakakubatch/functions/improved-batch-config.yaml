apiVersion: batch/v1
kind: Job
metadata:
  name: miraikakaku-fixed-batch-job
  labels:
    app: miraikakaku-batch
    version: fixed
spec:
  taskGroups:
  - taskSpec:
      runnables:
      - container:
          imageUri: us-central1-docker.pkg.dev/miraikakaku-430816/miraikakaku-docker/batch-stable:latest
          entrypoint: /bin/bash
          commands:
          - -c
          - |
            set -e
            echo "üöÄ Container Worker ${BATCH_TASK_INDEX:-0} started"
            
            # Environment verification
            python3 --version
            pip3 --version
            python3 -c "import pymysql; print('PyMySQL imported successfully')"
            python3 -c "import numpy; print('NumPy imported successfully')"
            
            # Database connectivity test
            python3 -c "
            import pymysql
            import os
            try:
                connection = pymysql.connect(
                    host=os.getenv('DB_HOST', '34.58.103.36'),
                    user=os.getenv('DB_USER', 'miraikakaku-user'),
                    password=os.getenv('DB_PASSWORD', 'miraikakaku-secure-pass-2024'),
                    database=os.getenv('DB_NAME', 'miraikakaku'),
                    charset='utf8mb4'
                )
                print('‚úÖ Database connection successful')
                connection.close()
            except Exception as e:
                print(f'‚ùå Database connection failed: {e}')
                exit(1)
            "
            
            # Execute main batch worker
            python3 /app/simple_batch_worker.py
      computeResource:
        cpuMilli: 2000      # Reduced from 4000 for stability
        memoryMib: 4096     # Reduced from 8192 for stability
      maxRetryCount: 3      # Increased from 2
      maxRunDuration: 7200s # Reduced from 14400s (2 hours)
      environment:
        variables:
          DB_HOST: "34.58.103.36"
          DB_USER: "miraikakaku-user"
          DB_PASSWORD: "miraikakaku-secure-pass-2024"
          DB_NAME: "miraikakaku"
          PYTHONUNBUFFERED: "1"
          PYTHONPATH: "/app"
    taskCount: 3          # Process 3 workers instead of 1
    parallelism: 2        # Run 2 at a time to avoid overload

  allocationPolicy:
    instances:
    - policy:
        machineType: e2-standard-2  # Smaller, more stable instance
        provisioningModel: STANDARD # Standard instead of SPOT for reliability
    location:
      allowedLocations:
      - regions/us-central1
      - regions/us-east1      # Additional region for reliability

  logsPolicy:
    destination: CLOUD_LOGGING

  priority: 75              # Higher priority for better scheduling