# マルチステージビルドによる最適化版
# ステージ1: ビルド環境
FROM python:3.11-slim AS builder

WORKDIR /app
COPY requirements.txt .

# 依存関係をインストール（仮想環境に）
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# ステージ2: 実行環境（軽量）
FROM python:3.11-slim

# 必要最小限のパッケージのみ
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# 仮想環境をコピー
COPY --from=builder /opt/venv /opt/venv

# アプリケーションコードをコピー
WORKDIR /app
COPY functions/ ./

# 環境変数設定
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1

# 非rootユーザーで実行（セキュリティ向上）
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

EXPOSE 8080

CMD ["sh", "-c", "uvicorn main:app --host 0.0.0.0 --port ${PORT:-8080} --workers 1"]