{
  "permissions": {
    "allow": [
      "Bash(PGPASSWORD:*)",
      "Bash(pip3 install:*)",
      "Bash(PGPASSWORD=:*)",
      "Bash(npx playwright test:*)",
      "Bash(tree:*)",
      "Bash(chmod:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(gcloud services list:*)",
      "Bash(./lib/gcloud_batch_manager.sh:*)",
      "Bash(docker build:*)",
      "Bash(gcloud builds submit:*)",
      "Bash(gcloud builds list:*)",
      "Bash(echo:*)",
      "Bash(do echo \"üóëÔ∏è ÂâäÈô§‰∏≠: $job\" gcloud batch jobs delete \"$job\" --location=us-central1 --quiet)",
      "Bash(__NEW_LINE__ gcloud batch jobs submit $JOB_NAME )",
      "Bash(__NEW_LINE__ echo \"‚úÖ „ÉÜ„Çπ„Éà„Éê„ÉÉ„ÉÅ„Ç∏„Éß„ÉñÊäïÂÖ•: $JOB_NAME\")",
      "Bash(__NEW_LINE__ echo \"üöÄ 100%ÂÆåÁíß„Ç∑„Çπ„ÉÜ„É†„ÉÜ„Çπ„Éà„Éê„ÉÉ„ÉÅÊäïÂÖ•‰∏≠...\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ „ÉÜ„Çπ„Éà„Éê„ÉÉ„ÉÅ„Ç∏„Éß„ÉñÊäïÂÖ•ÂÆå‰∫Ü: $JOB_NAME\")",
      "Bash(__NEW_LINE__ echo \"üöÄ 100%ÂÆåÁíß„Ç∑„Çπ„ÉÜ„É†Ê≠£Âºè„Éá„Éó„É≠„Ç§ÈñãÂßã...\")",
      "Bash(__NEW_LINE__ echo \"\")",
      "Bash(__NEW_LINE__ echo \"üöÄüöÄüöÄ 100%ÂÆåÁíßmiraikakakubatch„Ç∑„Çπ„ÉÜ„É† „Éá„Éó„É≠„Ç§ÊúÄÁµÇÂÆüË°å üöÄüöÄüöÄ\")",
      "Bash(timeout 10 gcloud compute machine-types list --zones=us-central1-a --format=\"value(name)\")",
      "Bash(__NEW_LINE__ echo \"\n1Ô∏è‚É£ ÊØéÊôÇÂÆüË°å (24Âõû/Êó•):\n   ‚úÖ ÂäπÊûú: Á∂ôÁ∂öÁöÑ„Ç∑„Çπ„ÉÜ„É†Áõ£Ë¶ñ\n   üí∞ „Ç≥„Çπ„Éà: Á¥Ñ$0.75-1.20/Êó•\n   üìà Á∑èÂÆüË°å: 8,760Âõû/Âπ¥\n\n2Ô∏è‚É£ ÊØéÊó•ÂÆüË°å (1Âõû/Êó•):\n   ‚úÖ ÂäπÊûú: Êó•Ê¨°„Ç∑„Çπ„ÉÜ„É†„ÉÅ„Çß„ÉÉ„ÇØ\n   üí∞ „Ç≥„Çπ„Éà: Á¥Ñ$0.03-0.05/Êó•\n   üìà Á∑èÂÆüË°å: 365Âõû/Âπ¥\n\n3Ô∏è‚É£ ÊØéÈÄ±ÂÆüË°å (1Âõû/ÈÄ±):\n   ‚úÖ ÂäπÊûú: ÈÄ±Ê¨°ÂÆöÊúü„É°„É≥„ÉÜ„Éä„É≥„Çπ\n   üí∞ „Ç≥„Çπ„Éà: Á¥Ñ$0.21-0.35/ÈÄ±\n   üìà Á∑èÂÆüË°å: 52Âõû/Âπ¥\")",
      "Bash(while read schedule timezone)",
      "Bash(cat:*)",
      "Bash(__NEW_LINE__ echo \"üöÄ PostgreSQL „Éá„Éº„ÇøÊ†ºÁ¥ç„Éê„ÉÉ„ÉÅ„Ç∏„Éß„ÉñÂÆüË°åÈñãÂßã\")",
      "Bash(__NEW_LINE__ echo \"üîß ‰øÆÊ≠£ÁâàPostgreSQL„Éá„Éº„ÇøÊ†ºÁ¥ç„Ç∏„Éß„ÉñÂÆüË°å\")",
      "Bash(gcloud batch jobs submit:*)",
      "Bash(PGPASSWORD=\"Miraikakaku2024!\" psql -h 34.173.9.214 -U postgres -d miraikakaku -c \"\nSELECT \n    ''stock_prices'' as table_name,\n    COUNT(*) as record_count,\n    MAX(created_at) as latest_record\nFROM stock_prices\nUNION ALL\nSELECT \n    ''stock_predictions'' as table_name,\n    COUNT(*) as record_count,\n    MAX(created_at) as latest_record\nFROM stock_predictions;\n\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ „Éê„ÉÉ„ÉÅ„Ç∏„Éß„ÉñÊäïÂÖ•ÂÆå‰∫Ü: $JOB_NAME\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ Â§ßË¶èÊ®°„Éê„ÉÉ„ÉÅ„Ç∏„Éß„ÉñÊäïÂÖ•ÂÆå‰∫Ü: $JOB_NAME\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ Á¢∫ÂÆü„Å™„Éá„Éº„ÇøÂèéÈõÜ„Éê„ÉÉ„ÉÅÊäïÂÖ•ÂÆå‰∫Ü: $JOB_NAME\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ „Ç∑„É≥„Éó„É´È´òÂäπÁéá„Éê„ÉÉ„ÉÅÊäïÂÖ•ÂÆå‰∫Ü: $JOB_NAME\")",
      "Bash(timeout:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(npm run dev:*)",
      "Bash(PORT=8080 python3:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(sudo netstat:*)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(python3:*)",
      "Bash(gcloud batch jobs list:*)",
      "Bash(gcloud batch jobs describe:*)",
      "Bash(gcloud logging read:*)",
      "Bash(for job in robust-predictions-20250922-155456 comprehensive-data-collection-20250922-032447 reliable-data-collection-20250922-032741 simple-effective-collection-20250922-060634 emergency-recovery-20250922-155444 historical-predictions-postgres-20250918-225000 massive-parallel-collection-20250922-032555 symbol-verify-corrected-20250918-112109 master-enhanced-postgres-20250918-224857)",
      "Bash(do)",
      "Bash(gcloud batch jobs delete:*)",
      "Bash(done)",
      "Bash(gcloud compute instances list:*)",
      "Bash(gcloud run services list:*)",
      "Bash(gcloud scheduler jobs list:*)",
      "Bash(gcloud sql instances list:*)",
      "Bash(gcloud billing accounts list:*)",
      "Bash(gcloud sql instances describe:*)",
      "Bash(gcloud sql instances delete:*)",
      "Bash(gcloud auth:*)",
      "Bash(pip3:*)",
      "Bash(for:*)",
      "Bash(do echo \"üóëÔ∏è Deleting: $job\")",
      "Bash(do echo \"üóëÔ∏è Deleting old job: $job\")",
      "Bash(do echo \"üóëÔ∏è Deleting failed job: $job\")",
      "Bash(gcloud batch operations list:*)",
      "Bash(gcloud functions deploy:*)",
      "Bash(gcloud scheduler jobs create:*)",
      "Bash(gcloud functions list:*)",
      "Bash(gcloud info:*)",
      "Bash(gcloud:*)",
      "Bash(psql:*)",
      "Bash(PORT=8081 python3:*)",
      "Bash(time curl:*)",
      "Bash(PGPASSWORD=\"Miraikakaku2024!\" psql -h 34.173.9.214 -U postgres -d miraikakaku -c \"\nEXPLAIN ANALYZE \nSELECT date, open_price, high_price, low_price, close_price, volume, symbol\nFROM stock_prices\nWHERE symbol = ''AAPL''\nAND date >= CURRENT_DATE - INTERVAL ''90 days''\nORDER BY date ASC;\n\")",
      "Bash(sort:*)",
      "Bash(./cleanup_gcp_resources.sh:*)",
      "Bash(bq:*)",
      "Bash(gsutil du:*)",
      "Bash(PORT=8082 python3:*)",
      "Bash(__NEW_LINE__ echo \"‚úÖ Submitting improved batch job: $JOB_NAME\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ Improved batch job submitted: $JOB_NAME\")",
      "Bash(__NEW_LINE__ echo \"üîß Creating GCP Batch job with script text (YAML format not supported for gcloud batch)\")",
      "Read(//mnt/c/Users/yuuku/**)",
      "Bash(__NEW_LINE__ echo \"üìÅ ÂÖ±Êúâ„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£„ÅÆÁßªÂãïÈñãÂßã...\")",
      "Bash(PGPASSWORD=\"Miraikakaku2024!\" psql -h 34.173.9.214 -U postgres -d miraikakaku -c \"\nSELECT \n    ''stock_prices'' as table_name,\n    COUNT(*) as total_records,\n    COUNT(DISTINCT symbol) as unique_symbols,\n    MIN(date) as earliest_date,\n    MAX(date) as latest_date,\n    COUNT(CASE WHEN close_price IS NOT NULL THEN 1 END) as records_with_price,\n    ROUND(\n        COUNT(CASE WHEN close_price IS NOT NULL THEN 1 END) * 100.0 / COUNT(*), \n        2\n    ) as price_fill_rate_percent\nFROM stock_prices\nUNION ALL\nSELECT \n    ''stock_predictions'' as table_name,\n    COUNT(*) as total_records,\n    COUNT(DISTINCT symbol) as unique_symbols,\n    MIN(prediction_date::date) as earliest_date,\n    MAX(prediction_date::date) as latest_date,\n    COUNT(CASE WHEN predicted_price IS NOT NULL THEN 1 END) as records_with_price,\n    ROUND(\n        COUNT(CASE WHEN predicted_price IS NOT NULL THEN 1 END) * 100.0 / COUNT(*), \n        2\n    ) as prediction_fill_rate_percent\nFROM stock_predictions;\n\")",
      "Bash(/bashes)",
      "Bash(PORT=3000 npm run dev)",
      "Bash(npx next lint:*)",
      "Bash(kill:*)",
      "Bash(HOST=0.0.0.0 PORT=3000 npm run dev)",
      "Bash(PORT=8085 python3:*)",
      "Bash(HOST=0.0.0.0 PORT=3001 npm run dev)",
      "Bash(PORT=8086 python3:*)",
      "Bash(HOST=0.0.0.0 PORT=3002 npm run dev)",
      "Bash(HOST=0.0.0.0 PORT=3003 npm run dev)",
      "Bash(fuser:*)",
      "Bash(npm run lint)",
      "Bash(npx tsc:*)",
      "Bash(find:*)",
      "Bash(npx next build:*)",
      "Bash(npx next analyze:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Read(//tmp/**)",
      "Bash(BATCH_MODE=add_category SYMBOL_CATEGORY=us_tech_stocks DB_PASSWORD=\"Miraikakaku2024!\" python3 enhanced_symbol_manager.py)",
      "Bash(BATCH_MODE=add_category SYMBOL_CATEGORY=us_healthcare DB_PASSWORD=\"Miraikakaku2024!\" python3 enhanced_symbol_manager.py)",
      "Bash(npm run test:e2e:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(./scripts/dependency-manager.sh:*)",
      "Bash(alembic current:*)",
      "Bash(alembic stamp:*)",
      "Read(//mnt/d/**)",
      "Bash(python -m pip:*)",
      "Bash(xargs:*)",
      "Bash(awk:*)",
      "Read(///**)",
      "Bash(npx postcss:*)",
      "Bash(PORT=3004 npm run dev)",
      "Bash(grep:*)",
      "Bash(npx eslint:*)",
      "Bash(npm cache clean:*)",
      "Bash(PORT=3005 npm run dev)",
      "Bash(NEXT_PUBLIC_API_URL=https://api.miraikakaku.com npm run build)",
      "Bash(npm outdated:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/mnt/c/Users/yuuku/cursor"
    ]
  }
}