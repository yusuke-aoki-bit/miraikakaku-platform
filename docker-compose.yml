version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./miraikakakufront
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - miraikakaku-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service
  backend:
    build:
      context: ./miraikakakuapi
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PYTHONUNBUFFERED=1
    env_file:
      - ./miraikakakuapi/.env
    networks:
      - miraikakaku-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Batch Processing Service
  batch:
    build:
      context: ./miraikakakubatch
      dockerfile: Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - BATCH_TYPE=default
      - PYTHONUNBUFFERED=1
    env_file:
      - ./miraikakakubatch/.env
    networks:
      - miraikakaku-network
    restart: "no"  # Run on-demand
    profiles:
      - batch  # Only start when explicitly requested

  # Price Data Collection Service
  batch-price:
    build:
      context: ./miraikakakubatch
      dockerfile: Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - BATCH_TYPE=price
      - PYTHONUNBUFFERED=1
    env_file:
      - ./miraikakakubatch/.env
    networks:
      - miraikakaku-network
    restart: "no"
    profiles:
      - batch

  # Prediction Generation Service
  batch-prediction:
    build:
      context: ./miraikakakubatch
      dockerfile: Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - BATCH_TYPE=prediction
      - PYTHONUNBUFFERED=1
    env_file:
      - ./miraikakakubatch/.env
    networks:
      - miraikakaku-network
    restart: "no"
    profiles:
      - batch

networks:
  miraikakaku-network:
    driver: bridge

# Usage Examples:
# Start core services (frontend + backend):
#   docker-compose up -d
#
# Run batch jobs:
#   docker-compose --profile batch run --rm batch
#   docker-compose --profile batch run --rm batch-price
#   docker-compose --profile batch run --rm batch-prediction
#
# View logs:
#   docker-compose logs -f frontend
#   docker-compose logs -f backend
#
# Stop all services:
#   docker-compose down